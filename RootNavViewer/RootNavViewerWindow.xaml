<Window x:Name="viewerWindow" x:Class="RootNav.Viewer.RootNavViewerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RootNav.Viewer"
        xmlns:handlers="clr-namespace:RootNav.Measurement;assembly=RootNav.Measurement"
        Title="RootNav Viewer v2.0" Height="577" Width="936"  SnapsToDevicePixels="True"
        Icon="/RootNav.Viewer;component/magnifying-glass.ico">

    <Window.Resources>

        <Style TargetType="ListBox">
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <Border CornerRadius="2" 
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                                <ItemsPresenter />
                            </Border>
                            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                    <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                    <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:WatermarkHelper x:Key="WatermarkHelper" />
        <Style x:Key="EntryFieldStyle" TargetType="Grid" >
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,0" />
        </Style>

        <local:EllipseBrushConverter x:Key="EllipseBrushConverter"/>
        <local:NotVisibilityConverter x:Key="notConverter" />
        <local:VisibilityConverter x:Key="VisibilityConverter" />
        <local:CountConverter x:Key="CountConverter" />

        <Style TargetType="Button" x:Key="PlainButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="mainBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{TemplateBinding Property=Background}" BorderBrush="DarkGray"
                                BorderThickness="1" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="mainBorder" Property="Background" Value="#FFDDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="PlainCloseButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="mainBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{TemplateBinding Property=Background}" BorderBrush="DarkGray"
                                BorderThickness="1 0 0 0" CornerRadius="0 0 4 0">
                            <TextBlock x:Name="ClearTextbox" Text="Clear" VerticalAlignment="Stretch" TextAlignment="Center" HorizontalAlignment="Stretch" TextDecorations="Underline"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="mainBorder" Property="Background" Value="#FFDDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="LeftPlainButton">
            <Setter Property="Content">
                <Setter.Value>
                    <Path Fill="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,5 L 10,10 L 10,0 L 0,5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="mainBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{TemplateBinding Property=Background}" BorderBrush="DarkGray"
                                BorderThickness="0 0 1 0" CornerRadius="0,0,0,4">
                            <ContentPresenter></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="mainBorder" Property="Background" Value="#FFDDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="RightPlainButton">
            <Setter Property="Content">
                <Setter.Value>
                    <Path Fill="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 10,5 L 0,10 L 0,0 L 10,5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border x:Name="mainBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{TemplateBinding Property=Background}" BorderBrush="DarkGray"
                                BorderThickness="1 0 0 0" CornerRadius="0,0,4,0">
                            <ContentPresenter></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="mainBorder" Property="Background" Value="#FFDDDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MeasurementHandlerTemplate" DataType="{x:Type handlers:MeasurementHandler}">
            <Border x:Name="mainBorder" Margin="0 2 2 2" BorderThickness="1" BorderBrush="LightGray" Background="#FFF4F4F4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Height="28" Content="{Binding Path=Name}"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                    <Setter TargetName="mainBorder" Property="Background" Value="LightGray"/>
                    <Setter TargetName="mainBorder" Property="BorderBrush" Value="DarkGray"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Background="White" BorderBrush="DarkGray" BorderThickness="0 0 0 1">
            <MenuItem Name="fileMenu" Header="File">
                <MenuItem Name="changeSourceMenuItem" Header="Change RSML source" Click="changeSourceMenuItem_Click" />
                <Separator />
                <MenuItem Name="exitMenuItem" Header="Exit" Click="exitMenuItem_Click" />
            </MenuItem>
            <MenuItem Name="toolsMenu" Header="Tools">
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="120"/>
                <RowDefinition/>
                <RowDefinition Height="51"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>

            <!-- Main Content Area -->

            <DockPanel Grid.Column="0" Grid.Row="0">
                <Border Margin="6 6 0 0" CornerRadius="4 4 0 0" Height="26" BorderThickness="1 1 1 0" BorderBrush="DarkGray" DockPanel.Dock="Top">
                    <Label SnapsToDevicePixels="True" HorizontalContentAlignment="Center" FontWeight="Bold" FontSize="12">Filter Results</Label>
                </Border>
                <Border BorderThickness="1" Margin="6,0,0,3" CornerRadius="0 0 4 4" BorderBrush="DarkGray">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="120"/>
                        </Grid.ColumnDefinitions>



                        <Border Height="20" BorderThickness="0 1 0 0" Grid.ColumnSpan="3" Grid.Row="1" BorderBrush="DarkGray">
                            <Grid>
                                <TextBlock x:Name="rootCountTextBlock" Height="17" HorizontalAlignment="Left" Margin="6,1,0,1" TextWrapping="Wrap" Text="Reading root data..." Width="292"/>
                                <Button Visibility="Hidden" Click="ClearBorder_Click" x:Name="ClearBorder" Style="{StaticResource PlainCloseButton}" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="40" Background="#FFF4F4F4">

                                </Button>
                            </Grid>
                        </Border>

                        <Canvas Grid.ColumnSpan="2" Grid.RowSpan="1">

                            <TextBlock Height="22" TextWrapping="Wrap" Text="Tag:" Width="34" Canvas.Left="6" Canvas.Top="9"/>
                            <TextBlock Height="22" TextWrapping="Wrap" Text="Date:" Width="34" Canvas.Left="6" Canvas.Top="36"/>

                            <Grid Height="22" Canvas.Left="45" Canvas.Top="6" Width="150">
                                <TextBox x:Name="SearchBox"/>
                                <TextBlock x:Name="SearchBoxWatermark" Margin="5 0 0 0" Text="Enter search terms..." VerticalAlignment="Center" 
                                           Foreground="#FFAAAAAA"
                                           IsHitTestVisible="False">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource WatermarkHelper}">
                                            <Binding ElementName="SearchBox" Path="Text.IsEmpty" />
                                            <Binding ElementName="SearchBox" Path="IsFocused" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </Grid>

                            <Grid Height="22" Canvas.Left="45" Canvas.Top="33" Width="150">
                                <TextBox x:Name="DateBox"/>
                                <TextBlock x:Name="DateBoxWatermark" Margin="5 0 0 0" Text="DD-MM-YYYY" VerticalAlignment="Center" 
                                           Foreground="#FFAAAAAA"
                                           IsHitTestVisible="False">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource WatermarkHelper}">
                                            <Binding ElementName="DateBox" Path="Text.IsEmpty" />
                                            <Binding ElementName="DateBox" Path="IsFocused" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </Grid>
                            <RadioButton x:Name="AnyRadioButton" Content="Any" Height="19" Canvas.Left="246" Canvas.Top="9" Width="48" GroupName="SearchRadioButtons" RenderTransformOrigin="0.556,1.579" IsChecked="True"/>
                            <RadioButton x:Name="AllRadioButton" Content="All" Height="19" Canvas.Left="205" Canvas.Top="9" Width="36" GroupName="SearchRadioButtons" RenderTransformOrigin="1.917,1.053" IsChecked="True"/>
                            <CheckBox x:Name="ImageOnlyCheckbox" Content="Only with images" Height="19" Canvas.Left="299" Canvas.Top="10" Width="112" RenderTransformOrigin="1.917,1.053" IsChecked="False"/>

                        </Canvas>
                        <Button x:Name="FilterButton" Grid.Column="2" Grid.RowSpan="1" Margin="6" Style="{StaticResource PlainButton}" Background="#FFF4F4F4" Content="Search" Click="FilterButton_Click"/>

                    </Grid>
                </Border>
            </DockPanel>

            <DockPanel Grid.RowSpan="2" Name="rootInformationPanel" IsEnabled="False" Grid.Column="0" Grid.Row="1">
                <Border Margin="6 3 0 0" CornerRadius="4 4 0 0" Height="26" BorderThickness="1 1 1 0" BorderBrush="DarkGray" DockPanel.Dock="Top">
                    <Grid>
                        <Label x:Name="RootNumberLabel" SnapsToDevicePixels="True" HorizontalContentAlignment="Center" HorizontalAlignment="Left" FontSize="12"></Label>
                        <Label SnapsToDevicePixels="True" HorizontalContentAlignment="Center" FontWeight="Bold" FontSize="12">Current Root</Label>
                    </Grid>
                </Border>

                <Border BorderThickness="1" Margin="6 0 0 6" CornerRadius="0 0 4 4" BorderBrush="DarkGray">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>

                        <Button Style="{StaticResource LeftPlainButton}" Grid.Column="0" Background="#FFF4F4F4" Click="LeftNavClick"/>
                        <Button Style="{StaticResource RightPlainButton}" Grid.Column="2" Background="#FFF4F4F4" Click="RightNavClick"/>
                        
                        <Grid Grid.Column="1" ClipToBounds="True">
                            <Viewbox>
                                <Image Name="backgroundImage" Stretch="Uniform"/>
                            </Viewbox>
                            <Viewbox>
                            <AdornerDecorator  Name="imageAdornerLayer" >
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Image Name="mainImage" Source="{Binding Image, ElementName=viewerWindow}" Stretch="Uniform"/>
                                        <Image Name="mainFeatureImage" Source="{Binding FeatureImage, ElementName=viewerWindow}" Stretch="Uniform"/>
                                    </Grid>
                                </AdornerDecorator>
                            </Viewbox>
                            <local:HideBorder x:Name="channelBorder" CornerRadius="2" Padding="4" Margin="0 10 10 0" Background="#99FFFFFF" BorderBrush="DarkGray" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <local:HideBorder.Style>
                                    <Style TargetType="{x:Type local:HideBorder}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Hide, RelativeSource={RelativeSource Self}}" Value="False">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0 10 -130 0" To="0 10 10 0" Storyboard.TargetProperty="Margin" Duration="0:0:0.2"></ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0 10 10 0" To="0 10 -130 0" Storyboard.TargetProperty="Margin" Duration="0:0:0.2"></ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:HideBorder.Style>

                                <StackPanel>
                                    <local:HideBorder x:Name="imageGroupBorder">
                                        <local:HideBorder.Style>
                                            <Style TargetType="{x:Type local:HideBorder}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Hide, RelativeSource={RelativeSource Self}}" Value="False">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation From="0" To="36" Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation From="36" To="0" Storyboard.TargetProperty="Height" Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </local:HideBorder.Style>
                                        <StackPanel>
                                            <RadioButton Name="showBackgroundRadioButton" Margin="1 0 2 0" GroupName="ImageGroup" IsChecked="True" Checked="VisibleImageSelectionChanged">Source Image</RadioButton>
                                            <RadioButton Name="showSegmentationRadioButton" Margin="1 0 2 0" GroupName="ImageGroup" Checked="VisibleImageSelectionChanged">Segmentation</RadioButton>
                                            <Separator></Separator>
                                        </StackPanel>
                                    </local:HideBorder>
                                    <CheckBox Name="showArchitectureRadioButton" Margin="0 0 2 0" IsChecked="True" Checked="VisibleImageSelectionChanged" Unchecked="VisibleImageSelectionChanged">Architecture</CheckBox>
                                    <CheckBox Name="showFeaturesRadioButton" Margin="0 2 2 0" IsChecked="False" Checked="VisibleImageSelectionChanged" Unchecked="VisibleImageSelectionChanged">Feature Locations</CheckBox>
                                </StackPanel>
                            </local:HideBorder>
                        </Grid>
                        
                        <Border VerticalAlignment="Bottom" Height="20" Grid.Column="1" BorderThickness="0 1 0 0" Background="#99FFFFFF" BorderBrush="DarkGray">
                            <TextBlock x:Name="rootImageTagTextBlock" Height="17" HorizontalAlignment="Left" Margin="6,1,0,1" TextWrapping="NoWrap" Text="" Width="400"/>
                        </Border>

                    </Grid>
                </Border>
            </DockPanel>

            <Border Grid.Row="1" Grid.Column="0" Background="#AACCCCCC" Margin="6 3 0 6" CornerRadius="4" Visibility="{Binding IsEnabled, Converter={StaticResource notConverter}, ElementName=rootInformationPanel}" Grid.RowSpan="2" />

            <DockPanel Name="traitsPanel" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" IsEnabled="False">
                <Border Margin="6 6 6 0" CornerRadius="4 4 0 0" Height="26" BorderThickness="1 1 1 0" BorderBrush="DarkGray" DockPanel.Dock="Top">
                    <Label SnapsToDevicePixels="True" HorizontalContentAlignment="Center" FontWeight="Bold" FontSize="12">Traits</Label>
                </Border>
                <Border Margin="6 0 6 0" CornerRadius="0" Height="Auto" BorderThickness="1 1 1 0" BorderBrush="DarkGray" DockPanel.Dock="Top">
                    <StackPanel Margin="3" Visibility="{Binding IsEnabled, Converter={StaticResource VisibilityConverter}, ElementName=rootInformationPanel}">
                        <StackPanel Margin="3 0 0 0" Orientation="Horizontal">
                            <TextBlock Height="20" TextWrapping="Wrap" Text="Tag:"/>
                            <TextBlock x:Name="traitsTagTextblock" Height="20" TextWrapping="Wrap" Margin="3 0 0 0" Text="1"/>
                        </StackPanel>

                        <StackPanel Margin="3 0 0 0" Orientation="Horizontal">
                            <TextBlock Height="20" TextWrapping="Wrap" Text="Number of plants:"/>
                            <TextBlock x:Name="traitsPlantCountTextbox"  Height="20" TextWrapping="Wrap" Margin="3 0 0 0" Text="1"/>
                        </StackPanel>

                        <StackPanel Margin="3 0 0 0" Orientation="Horizontal">
                            <TextBlock Height="20" TextWrapping="Wrap" Text="Captured on:"/>
                            <TextBlock x:Name="traitsDateTextbox" Height="20" TextWrapping="Wrap" Margin="3 0 0 0" Text="12/11/2012"/>
                        </StackPanel>



                    </StackPanel>
                </Border>


                <Border Grid.Row="0" CornerRadius="0 0 0 4" BorderThickness="1 1 1 1" BorderBrush="DarkGray" Margin="6 0 6 0">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.Row="0">
                            <Border BorderThickness="0 0 1 0" BorderBrush="DarkGray">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition />
                                        <RowDefinition Height="24" />
                                        <RowDefinition />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0 0 0 1" BorderBrush="DarkGray">
                                        <TextBlock Text="Plant Measurements" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <Border Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0 1 0 1" BorderBrush="DarkGray">
                                        <TextBlock Text="Root Measurements" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <ListBox Grid.Row="1" SelectionMode="Multiple" x:Name="plantListBox" BorderThickness="0" Margin="0" Padding="0" ItemTemplate="{StaticResource MeasurementHandlerTemplate}" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                        </ListBox.Resources>
                                    </ListBox>

                                    <ListBox Grid.Row="3" SelectionMode="Multiple" x:Name="rootListBox" BorderThickness="0" Margin="0" Padding="0" ItemTemplate="{StaticResource MeasurementHandlerTemplate}" HorizontalContentAlignment="Stretch">
                                        <ListBox.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                        </ListBox.Resources>
                                    </ListBox>
                                </Grid>
                            </Border>
                        </ScrollViewer>

                        <local:HideBorder x:Name="measurementHideBorder" Height="0" BorderBrush="DarkGray" Grid.Row="1">
                            <local:HideBorder.Hide>
                                <MultiBinding Converter="{StaticResource CountConverter}">
                                    <Binding Path="SelectedItems.Count" ElementName="plantListBox" Mode="OneWay"/>
                                    <Binding Path="SelectedItems.Count" ElementName="rootListBox" Mode="OneWay"/>
                                </MultiBinding>
                            </local:HideBorder.Hide>
                            <local:HideBorder.Style>
                                <Style TargetType="{x:Type local:HideBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Hide, RelativeSource={RelativeSource Self}}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="BorderThickness" Value="0 1 0 0"/>
                                            </DataTrigger.Setters>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="0" To="42" Storyboard.TargetProperty="Height" Duration="0:0:0.1"></DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation From="42" To="0" Storyboard.TargetProperty="Height" Duration="0:0:0.1"></DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </local:HideBorder.Style>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1.2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Button x:Name="MeasureButton" Background="#F4F4F4" Grid.RowSpan="2" Content="Measure" Style="{StaticResource PlainButton}" Margin="3" Grid.Column="2" Width="95" Click="Measure_Click"/>
                                <RadioButton x:Name="TabularCheckbox" Margin="6 0 0 0" GroupName="OutputRadioGroup" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Content="Tabular" />
                                <RadioButton x:Name="CSVCheckbox" Margin="6 0 0 0" IsChecked="True" GroupName="OutputRadioGroup"  VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Content="CSV files" />

                                <Label Content="Label complete" Grid.Column="1" Grid.Row="0" VerticalContentAlignment="Center" Padding="0"/>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
                                    <Label Content="architectures" Padding="0" VerticalContentAlignment="Center" Margin="0 0 6 0"></Label>
                                    <CheckBox x:Name="completedArchitecturesCheckbox" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </local:HideBorder>
                    </Grid>
                </Border>
            </DockPanel>

            <Border Grid.Column="1" Height="42" Grid.Row="3" Margin="6 0 6 0" BorderThickness="1" CornerRadius="4" BorderBrush="DarkGray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Button x:Name="ExportButton" Background="#F4F4F4" Grid.RowSpan="2" Content="Export Architecture" Style="{StaticResource PlainButton}" Margin="3" Grid.Column="1" Click="ExportButton_Click"/>
                    <Button x:Name="ImageButton" Background="#F4F4F4" Grid.RowSpan="2" Content="Export Images" Style="{StaticResource PlainButton}" Margin="0,0,3,3" Grid.Column="2" Click="ImageButton_Click" HorizontalAlignment="Right" Width="95" Height="34" VerticalAlignment="Bottom"/>
                    <RadioButton x:Name="ExportXMLCheckbox" Margin="6 0 0 0" GroupName="ExportRadioGroup" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Content="RSML files" />
                    <RadioButton x:Name="ExportCSVCheckbox" Margin="6 0 0 0" IsChecked="True" GroupName="ExportRadioGroup"  VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Content="Txt files" />

                </Grid>
            </Border>

            <Border Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Background="#aaCCCCCC" Margin="6 6 6 0" CornerRadius="4" Visibility="{Binding IsEnabled, Converter={StaticResource notConverter}, ElementName=traitsPanel}" />

            <!-- End of Main Content Area -->

        </Grid>

        <StatusBar Grid.Row="2" Height="20" BorderThickness="0,1,0,0" BorderBrush="DarkGray" Background="White" x:Name="MainStatusBar">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0" HorizontalAlignment="Left">
                <TextBlock Name="statusText" VerticalAlignment="Center" Padding="4,0,0,0">Status: Connecting to Database</TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="1" HorizontalAlignment="Left">
                <Ellipse VerticalAlignment="Center" Width="12" Height="12" Stroke="DarkGray" Fill="{Binding Connected, Converter={StaticResource EllipseBrushConverter}, ElementName=viewerWindow}"  >
                </Ellipse>
            </StatusBarItem>

            <Separator Margin="0" Grid.Column="3" SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Stretch" Background="DarkGray"/>

            <StatusBarItem Grid.Column="5" HorizontalAlignment="Right" Padding="0">
                <ProgressBar Margin="3 0 3 0" Name="mainProgressBar" Height="14" Minimum="0" Maximum="100" Value="0" Width="276"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
